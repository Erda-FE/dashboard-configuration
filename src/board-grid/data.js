import ajaxLayout from './ajax-data';

const merticData = [
  {
    name: 'tset1',
    type: 'line',
    data: [
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
    ],
  },
  {
    name: 'tset2',
    type: 'line',
    data: [
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.77',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.77',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
      '0.78',
    ],
  }, {
    name: 'tset3',
    type: 'bar',
    data: [
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
      '0.03',
    ],

  }
]

let staticData = {
  title: 'zookeeper',
  xData: [
    [
      '13:39',
      '13:40',
      '13:41',
      '13:42',
      '13:43',
      '13:44',
      '13:45',
      '13:46',
      '13:47',
      '13:48',
      '13:49',
      '13:50',
      '13:51',
      '13:52',
      '13:53',
      '13:54',
      '13:55',
      '13:56',
      '13:57',
      '13:58',
      '13:59',
      '14:00',
      '14:01',
      '14:02',
      '14:03',
      '14:04',
      '14:05',
      '14:06',
      '14:07',
      '14:08',
      '14:09',
      '14:10',
      '14:11',
      '14:12',
      '14:13',
      '14:14',
      '14:15',
      '14:16',
      '14:17',
      '14:18',
      '14:19',
      '14:20',
      '14:21',
      '14:22',
      '14:23',
      '14:24',
      '14:25',
      '14:26',
      '14:27',
      '14:28',
      '14:29',
      '14:30',
      '14:31',
      '14:32',
      '14:33',
      '14:34',
      '14:35',
      '14:36',
      '14:37',
      '14:38',
    ]
  ],
  metricData: merticData,
}

export default [
  {
    w: 9,
    h: 9,
    x: 0,
    y: 0,
    i: 'view-1',
    moved: false,
    static: false,
    // view: {
    //   name: 'test',
    //   viewType: 'chart:line', // chart:timeline | chart:bar | chart:radar ...
    //   // 展示类型，图表或其他，界面配置时内置为chart:xxx类型, 注册了其他组件后可选择
    //   staticData: {}, // 静态数据
    //   loadData: () => Promise, // 动态获取数据的方法，如果界面上配置了接口，则自动生成请求调用
    //   dataConvertor: string | function // 数据转换，为string时表示使用已注册的方法
    //   config: object // 所有页面上的配置项
    //   config.option: string | object // 图表配置，会作为最高优先级合并
    //   Controls: [string, Component] // 控件列表，展示在header下面，为string时表示使用已注册的组件
    //   Configurator: React.Element, // 配置器，放在配置区域显示
    // },
    view: {
      name: 'test',
      viewType: 'chart:line',
      staticData,
      loadData() {
        return new Promise(resolve => {
          setTimeout(() => {
            resolve(staticData);
          }, 1000);
        });
      },
      dataConvertor: 'line',
      // dataConvertor(data) {
      //   console.log('convert:', data);
      //   return data;
      // },
      Controls: ['input', 'input2'],
      config: {
        option: 'line',
      },
      // render: () => <ChartRender {...this.props} hasData={hasData} getOption={this.getOption} />,
    },
  },
  // ...ajaxLayout,
];
